[
  {
    "id": 1,
    "url": "https://github.com/Sina-karimi81/JSON-Parser",
    "assets": [
      {
        "source": "assets/java-logo.png",
        "alt": "Java"
      }
    ],
    "title": "JSON Parser",
    "description": "A JSON written in java, using the reflection standard library to serialize and deserialize java objects and classes to JSON representation and vice versa."
  },
  {
    "id": 2,
    "url": "https://github.com/Sina-karimi81/JDown",
    "assets": [
      {
        "source": "assets/java-logo.png",
        "alt": "Java"
      }
    ],
    "title": "JDown",
    "description": "An IDM clone written in Java as a desktop application. using Java's standard library and JavaFX library."
  },
  {
    "id": 3,
    "url": "https://github.com/Sina-karimi81/Cloud-Computing-Final-Project",
    "assets": [
      {
        "source": "assets/java-logo.png",
        "alt": "Java"
      },
      {
        "source": "assets/docker-logo.png",
        "alt": "Docker"
      },
      {
        "source": "assets/kubernetes-logo.png",
        "alt": "K8S"
      }
    ],
    "title": "Order Tracking System",
    "description": "This project is a cloud-native order tracking application built using Java Spring Boot, Docker, and Kubernetes. The application provides RESTful APIs for registering orders, approving or rejecting them, and checking order status. It is backed by a PostgreSQL master-slave architecture, ensuring that write operations go to the master database while read operations are handled by the slave."
  },
  {
    "id": 4,
    "url": "https://github.com/Sina-karimi81/Cloud-Native-App",
    "assets": [
      {
        "source": "assets/java-logo.png",
        "alt": "Java"
      },
      {
        "source": "assets/docker-logo.png",
        "alt": "Docker"
      },
      {
        "source": "assets/rabbitmq.png",
        "alt": "Rabbitmq"
      }
    ],
    "title": "Cloud Native Application",
    "description": "This project is a cloud-native image generation application built using Java Spring Boot, Docker, and RabbitMQ. The application is a combination of three microservices and it connects to thrid-party services such as image-to-text and text-to-image and an object store."
  }
]